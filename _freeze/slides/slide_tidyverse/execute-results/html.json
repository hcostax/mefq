{
  "hash": "238136575afe8195db96bb9d498fed47",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: \n  revealjs:\n    css: ../styles.css\n    slide-number: true\n    show-slide-number: all\n    preview-links: auto\n    self-contained: true\n    progress: true\n    history: true\n    hash-type: number\n    theme: default\n    code-block-background: true\n    highlight-style: zenburn\n    code-link: false\n    code-copy: true\n    pagetitle: \"Dados e R\"\n    author-meta: \"Henrique Costa\"\n    date-meta: \"2024-08-19\"\n---\n\n\n::: {.my-title}\n# [Dados e R]{.blue} <br />Data Wrangling & DataViz\n\n::: {.my-grey}\n[Encontro 2 | 19/08/20024]{}<br />\n[Henrique Costa | Métodos Estratégicos em FinQuant]{}\n:::\n\n<!-- ![](../img/proud_coder_357EDD.svg){.absolute bottom=0 right=0 width=400} -->\n:::\n\n<!-- Program II -->\n\n# Dados e R\n\n## Funções {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Receitas]{.b .green} permitem que os chefs preparem guloseimas saborosas\n    -   As receitas pedem ingredientes\n    -   Recipes involve one or more steps\n    -   As etapas transformam os ingredientes em guloseimas\n\n::: {.fragment .mt1}\n-   [Funções]{.b .blue} são como receitas *personalizáveis*\n    -   Funções solicitam entradas (\"argumentos\")\n    -   As funções envolvem uma ou mais linhas de código\n    -   O código transforma entradas em saídas\n    -   O uso de funções requer parênteses (geralmente)\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li vpqdjfdy trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n\n::: {.fragment}\n`doce <- f(ing1, ing2)`\n:::\n:::\n:::\n\n::: footer\n\n:::\n\n## Funções - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CASO DE USO: A função pode executar uma tarefa de forma mais fácil e legível\n\n# MODELO: saída <- nome_da_função(entrada)\n\n9 ^ (1 / 2)\n\nx <- sqrt(9)\nx\n\n# ==============================================================================\n\n# LIÇÃO: Também podemos usar funções para transformar objetos\n\ny <- 9\n\nsqrt(y)\n\n# ==============================================================================\n\n# LIÇÃO: Podemos até usar funções para transformar o resultado dos cálculos\n\n2 / 3\n\nround(2 / 3)\n\n# ==============================================================================\n\n# LIÇÃO: Podemos personalizar o que uma função faz usando argumentos\n\n# MODELO: saída <- nome_da_função(argumento, nome_do_argumento = valor_do_argumento)\n\n\nround(2 / 3, digits = 2)\n\nround(2 / 3, digits = 3)\n\n# ==============================================================================\n\n# LIÇÃO: Alguns argumentos são opcionais porque têm valores padrão\n\nround(2 / 3) # the default value for digits is 0\n\nround(2 / 3, digits = 0)\n```\n:::\n\n\n::: footer\n\n:::\n\n\n## Vectores {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Vetores]{.b .blue} combinam objetos semelhantes em uma coleção\n    -   *Gosto de imaginar um trem puxando vários vagões*\n    -   Um vetor é um objeto com muitos subobjetos\n    -   Nós nos referimos a cada subobjeto como um [elemento]{.b .green}\n\n::: {.fragment .mt1}\n-   Algumas funções [transformam cada elemento]{.b .green} um de cada vez\n    -   *Dobrar a quantidade de carga em cada vagão*\n:::\n\n::: {.fragment .mt1}\n-   Algumas funções [resumir em todos os elementos]{.b .green}\n    -   *Calcule a carga total em todos os vagões do trem*\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n<br />\n    ![](../img/traincar.png)\n\n::: {.fragment}\n`v <- c(1, 2, 3, 4, 5)`\n:::\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Vetores - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# LIÇÃO: Podemos combinar vários elementos em um vetor\n\n# MODELO: nome_do_vetor <- c(elemento1, elemento2, elemento3)\n\nx <- 4 9 16 25 # error\n\nx <- c(4, 9, 16, 25)\nx\n\ny <- c(2, 3)\ny\n\n# ==============================================================================\n\n# LIÇÃO: Também podemos combinar vários vetores e elementos\n\nc(x, y)\n\nc(x, y, 20)\n\n# ==============================================================================\n\n# CASO DE USO: Operadores matemáticos transformarão cada elemento individualmente\n\nx + 1\n\nx * 3\n\nx # mas, novamente, isso não será salvo a menos que você use atribuição\n\n# ==============================================================================\n\n# CASO DE USO: Algumas funções também transformarão cada elemento individualmente\n\nsqrt(x)\n\nlog(x)\n\n# ==============================================================================\n\n# CASO DE USO: Outras funções resumirão o vetor com um único número\n\nlength(x)\n\nsum(x)\n\nmean(x)\n```\n:::\n\n\n::: footer\n\n:::\n\n<!-- Insert quiz and short break here? -->\n\n## Strings {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   Ao programar com R, precisamos de uma maneira de distinguir\n    -   Nomes de objetos/funções (por exemplo, a função *mean*)\n    -   Dados de texto/caractere (por exemplo, a palavra *mean*)\n    \n::: {.fragment .mt1}\n-   [Strings]{.b .blue} são a maneira do R armazenar dados de texto\n    -   Strings podem armazenar qualquer caractere (sem regras!)\n    -   As strings são criadas e exibidas com [quotes]{.b .green}\n:::\n\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li xqnbvely trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n\n\n:::\n:::\n\n::::\n\n<!-- Insert quiz and short break here? -->\n\n## Strings {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n\n::: {.fragment .mt1}\n-   R tem ótimas ferramentas para trabalhar com strings\n    -   As strings podem ser coletadas em vetores\n    -   Funções especiais podem transformar strings\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li xqnbvely trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n\n::: {.fragment}\n`name <- \"John Doe\"`\n:::\n\n:::\n:::\n\n:::\n\n## Strings - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CASO DE USO: Strings são a principal maneira de armazenar dados de caracteres em R\n \nmy_color <- red # error\n\nmy_color <- \"red\" # correto\n\n# ==============================================================================\n\n# CASO DE USO: Strings também podem armazenar símbolos não permitidos em nomes de objetos\n\ndye <- \"red#40\"\ndye\n\ndyes <- c(\"red#40\", \"blue#02\")\ndyes\n\n# ==============================================================================\n\n# ARMADILHA: Muitas operações que você pode fazer com números não funcionarão para strings\n\ndyes + 1 # error\n\nmean(dyes) # error\n\n# ==============================================================================\n\n# CASO DE USO: Mas outras operações funcionam para ambos ou mesmo apenas para strings\n\nlength(dyes)\n\nnchar(dyes)\n\ndyes2 <- toupper(dyes)\ndyes2\n```\n:::\n\n\n::: footer\n\n:::\n\n## Packages (Pacotes) {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Livros de receitas]{.b .green} são uma ótima maneira de aprender a cozinhar\n    -   *Eles contêm muitas receitas e instruções*\n    -   Navegue em uma **livraria** online para encontrar um livro de receitas\n    -   **Encomende** para adicionar à sua **estante** pessoal\n    -   Para usar, **retire** o livro de receitas da prateleira\n\n\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li tboujdsn trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n\n\n:::\n:::\n\n\n## Packages (Pacotes) {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n\n::: {.fragment .mt1}\n-   [Pacotes]{.b .blue} são como livros de receitas para R\n    -   *Eles contêm funções e conjuntos de dados úteis*\n    -   Navegue em um **repositório** online para um pacote\n    -   **Instale** para adicioná-lo à sua **biblioteca** pessoal\n    -   Para usar, **carregue** o pacote da biblioteca\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li tboujdsn trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n\n::: {.fragment}\n`library(\"pkg_name\")`\n:::\n:::\n:::\n\n::: footer\n\n:::\n\n## Packages - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CASO DE USO: O pacote stringr adiciona uma função para corrigir a capitalização\n\nstudents <- c(\"mary anne\", \"BENjamin\", \"Lee\")\n\n# ==============================================================================\n\n# ARMADILHA: Mas não podemos usar essa função sem instalar o pacote\n\nstr_to_title(students) # error\n\n# ==============================================================================\n\n# LIÇÃO: Instalando um pacote usando RStudio\n\n# - RStudio > Extras pane > Packages tab > Install button\n\n# ==============================================================================\n\n# ARMADILHA: Também precisamos carregar o pacote antes de podermos usá-lo\n\nstr_to_title(students) # error\n\n# ==============================================================================\n\n# LIÇÃO: Carregamos o pacote usando library()\n\nlibrary(\"stringr\")\nstr_to_title(students) # pronto isso funciona!\n\n# ==============================================================================\n\n# LIÇÃO: Também podemos manter nossos pacotes atualizados usando o RStudio\n\n# RStudio > Extras pane > Packages tab > Update button\n```\n:::\n\n\n::: footer\n\n:::\n\n<!-- Wrangle I -->\n\n# Wrangle I\n\n## Princípio de Dados Tidy (Arrumados) {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n- Existem muitas maneiras de armazenar dados\n\n::: {.fragment .mt1}\n- Aprenderemos o formato [tidy data]{.b .blue}\n    - Os dados devem ser *retangulares*\n    - Cada [variável]{.green} tem sua própria coluna\n    - Cada [observação]{.green} tem sua própria linha\n    - Cada [valor]{.verde} tem sua própria célula\n:::\n\n::: {.fragment .mt1}\n![](../img/tidydata.png)\n:::\n\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li qhdmndwt trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Outros conselhos sobre dados {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Nomeie todas as variáveis]{.b .blue} na primeira linha\n    -   Isso é chamado de [linha de cabeçalho]{.b .green}\n    \n::: {.fragment .mt1}\n-   [Evite células mescladas]{.b .blue} para armazenamento de dados\n    -   Estes são bons para comunicação\n:::\n\n::: {.fragment .mt1}\n-   [Evite células vazias]{.b .blue} sempre que possível\n    -   Marcar [dados ausentes]{.b .green} como `NA`\n:::\n\n::: {.fragment .mt1}\n-   [Evite formatação como dados]{.b .blue} para armazenamento\n    -   por exemplo, codificação de cores não redundante\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li dizvjgip trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Arrumando (*Tidying*) exemplo 1 {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"45%\"}\n#### Não Arrumado (Tidy)\n<table class=\"table-bad\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>Nome</td>\n    <td>Ann</td>\n    <td>Bob</td>\n    <td>Cat</td>\n    <td>Dom</td>\n  </tr>\n  <tr>\n    <td>Idade</td>\n    <td>13</td>\n    <td>10</td>\n    <td>11</td>\n    <td>11</td>\n  </tr>\n  <tr>\n    <td>Peso</td>\n    <td>56.4</td>\n    <td>46.8</td>\n    <td>41.3</td>\n    <td>43.3</td>\n  </tr>\n  </tbody>\n</table>\n\n::: {.fragment .mt1 .pv4}\n❌ Aqui, cada linha é uma variável e cada coluna é uma observação.\n:::\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"45%\"}\n::: {.fragment}\n#### Arrumado (*Tidy*)\n<table class=\"table-good\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>Nome</td>\n    <td>Idade</td>\n    <td>Peso</td>\n  </tr>\n  <tr>\n    <td>Ann</td>\n    <td>13</td>\n    <td>56.4</td>\n  </tr>\n  <tr>\n    <td>Bob</td>\n    <td>10</td>\n    <td>46.8</td>\n  </tr>\n  <tr>\n    <td>Cat</td>\n    <td>11</td>\n    <td>41.3</td>\n  </tr>\n  <tr>\n    <td>Dom</td>\n    <td>11</td>\n    <td>43.3</td>\n  </tr>\n  </tbody>\n</table>\n::: {.pv4}\n✔️ Aqui, cada coluna é uma variável e cada linha é uma observação.\n:::\n:::\n:::\n:::\n\n::: footer\n\n:::\n\n## Arrumando (*Tidying*) exemplo 2 {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"45%\"}\n#### Não arrumado (*Tidy*)\n<table class=\"table-bad\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>Nome:</td>\n    <td>Ann</td>\n    <td>Bob</td>\n    <td>Cat</td>\n    <td>Dom</td>\n  </tr>\n  <tr>\n    <td>Idade</td>\n    <td>Peso</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>13</td>\n    <td>56.4</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>10</td>\n    <td>46.8</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>11</td>\n    <td>41.3</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>11</td>\n    <td>43.3</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  </tbody>\n</table>\n\n::: {.fragment .mt1 .pv4}\n❌ Aqui, temos dados que não são retangulares porque a variável Names tem sua própria linha.\n:::\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"45%\"}\n::: {.fragment}\n#### Arrumado (*Tidy*)\n<table class=\"table-good\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>Nome</td>\n    <td>Idade</td>\n    <td>Peso</td>\n  </tr>\n  <tr>\n    <td>Ann</td>\n    <td>13</td>\n    <td>56.4</td>\n  </tr>\n  <tr>\n    <td>Bob</td>\n    <td>10</td>\n    <td>46.8</td>\n  </tr>\n  <tr>\n    <td>Cat</td>\n    <td>11</td>\n    <td>41.3</td>\n  </tr>\n  <tr>\n    <td>Dom</td>\n    <td>11</td>\n    <td>43.3</td>\n  </tr>\n  </tbody>\n</table>\n\n::: {.pv4}\n✔️ Aqui, tornamos os dados retangulares movendo a variável Nomes para sua própria coluna.\n:::\n:::\n:::\n:::\n\n::: footer\n\n:::\n\n## Arrumando (*Tidying*) exemplo 3 {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"45%\"}\n#### Não arrumado (*Tidy*)\n<table class=\"table-bad table-small\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>country</td>\n    <td>year</td>\n    <td>cases / population</td>\n  </tr>\n  <tr>\n    <td rowspan=2>Afghanistan</td>\n    <td>1999</td>\n    <td>NA / 19987071</td>\n  </tr>\n  <tr>\n    <td>2000</td>\n    <td>2666 / 20595360</td>\n  </tr>\n  <tr>\n    <td rowspan=2>Brazil</td>\n    <td>1999</td>\n    <td>37737 / 172006362</td>\n  </tr>\n  <tr>\n    <td>2000</td>\n    <td>80488 / 174504898</td>\n  </tr>\n  <tr>\n    <td rowspan=2>China</td>\n    <td>1999</td>\n    <td>212258 / 1272915272</td>\n  </tr>\n  <tr>\n    <td>2000</td>\n    <td>213766 / 1280428583</td>\n  </tr>\n  </tbody>\n</table>\n\n::: {.fragment .mt1 .pv4}\n❌ Aqui, mesclamos células e dois valores armazenados em uma única célula.\n:::\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"45%\"}\n::: {.fragment}\n#### Arrumado (*Tidy*)\n<table class=\"table-good table-small\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>country</td>\n    <td>year</td>\n    <td>cases</td>\n    <td>population</td>\n  </tr>\n  <tr>\n    <td>Afghanistan</td>\n    <td>1999</td>\n    <td>NA</td>\n    <td>19987071</td>\n  </tr>\n  <tr>\n    <td>Afghanistan</td>\n    <td>2000</td>\n    <td>2666</td>\n    <td>20595360</td>\n  </tr>\n  <tr>\n    <td>Brazil</td>\n    <td>1999</td>\n    <td>37737</td>\n    <td>172006362</td>\n  </tr>\n  <tr>\n    <td>Brazil</td>\n    <td>2000</td>\n    <td>80488</td>\n    <td>174504898</td>\n  </tr>\n  <tr>\n    <td>China</td>\n    <td>1999</td>\n    <td>212258</td>\n    <td>1272915272</td>\n  </tr>\n  <tr>\n    <td>China</td>\n    <td>2000</td>\n    <td>213766</td>\n    <td>1280428583</td>\n  </tr>\n  </tbody>\n</table>\n::: {.pv4}\n✔️Aqui, desfazemos a mesclagem dos países e separamos as variáveis de casos e populações em colunas.\n:::\n:::\n:::\n:::\n\n::: footer\n\n:::\n\n\n## Arrumando (*Tidying*) exemplo 4 {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"45%\"}\n#### Não arrumado\n<table class=\"table-bad\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>student</td>\n    <td>grade</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>[Amber]{.bg-yellow}</td>\n    <td>91.5</td>\n    <td>A-</td>\n  </tr>\n  <tr>\n    <td>[Bristol]{.bg-teal}</td>\n    <td>86.2</td>\n    <td>B</td>\n  </tr>\n  <tr>\n    <td>[Charlene]{.bg-yellow}</td>\n    <td>94.0</td>\n    <td>A</td>\n  </tr>\n  <tr>\n    <td>Diego</td>\n    <td>89.3</td>\n    <td>B+</td>\n  </tr>\n  <tr>\n    <td colspan=3>Legend: [Psych. Major]{.bg-yellow}, [Psych. Minor]{.bg-teal}</td>\n  </tr>\n  </tbody>\n</table>\n\n::: {.fragment .mt1 .pv4}\n❌ Aqui, temos um nome de variável ausente e formatação como dados.\n:::\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"45%\"}\n::: {.fragment}\n#### Arrumado\n<table class=\"table-good\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>student</td>\n    <td>psych</td>\n    <td>grade</td>\n    <td>letter</td>\n  </tr>\n  <tr>\n    <td>Amber</td>\n    <td>major</td>\n    <td>91.5</td>\n    <td>A-</td>\n  </tr>\n  <tr>\n    <td>Bristol</td>\n    <td>minor</td>\n    <td>86.2</td>\n    <td>B</td>\n  </tr>\n  <tr>\n    <td>Charlene</td>\n    <td>major</td>\n    <td>94.0</td>\n    <td>A</td>\n  </tr>\n  <tr>\n    <td>Diego</td>\n    <td>NA</td>\n    <td>89.3</td>\n    <td>B+</td>\n  </tr>\n  </tbody>\n</table>\n::: {.pv4}\n✔️ Aqui, adicionamos uma coluna para a variável psych, removemos a legenda e nomeamos a variável letter.\n:::\n:::\n:::\n:::\n\n::: footer\n\n:::\n\n\n## Arrumando (*Tidying*) exemplo 5 {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"45%\"}\n#### Não arrumado\n<table class=\"table-bad\" width=\"100%\">\n  <tbody>\n  <tr>\n    <td>student</td>\n    <td>grade</td>\n    <td>letter</td>\n  </tr>\n  <tr>\n    <td>Amber</td>\n    <td>91.5</td>\n    <td>A-</td>\n  </tr>\n  <tr>\n    <td>Bristol*</td>\n    <td>94.2</td>\n    <td>A</td>\n  </tr>\n  <tr>\n    <td colspan=3>Class Summary</td>\n  </tr>\n  <tr>\n    <td>As</td>\n    <td>2</td>\n    <td>Yay!</td>\n  </tr>\n  <tr>\n    <td>Bs</td>\n    <td>0</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td colspan=3 class=\"tr\">*Grade was revised.</td>\n  </tr>\n  </tbody>\n</table>\n\n::: {.fragment .mt1 .pv4}\n❌ Aqui, temos dois tipos de dados em um arquivo e uma nota de rodapé como dados.\n:::\n:::\n\n::: {.column width=\"10%\"}\n:::\n\n::: {.column width=\"45%\"}\n::: {.fragment}\n#### Arrumado\n<table class=\"table-good\" width=\"100%\">\n  <tbody>\n    <tr>\n      <td>student</td>\n      <td>grade</td>\n      <td>letter</td>\n      <td>revised</td>\n    </tr>\n    <tr>\n      <td>Amber</td>\n      <td>91.5</td>\n      <td>A-</td>\n      <td>FALSE</td>\n    </tr>\n    <tr>\n      <td>Bristol</td>\n      <td>94.2</td>\n      <td>A</td>\n      <td>TRUE</td>\n    </tr>\n  </tbody>\n</table>\n\n<table class=\"table-good\" width=\"100%\" style=\"margin-top: 1em;\">\n  <tbody>\n    <tr>\n      <td>letter</td>\n      <td>count</td>\n      <td>notes</td>\n    </tr>\n    <tr>\n      <td>A</td>\n      <td>2</td>\n      <td>Yay!</td>\n    </tr>\n    <tr>\n      <td>B</td>\n      <td>0</td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n\n::: {.pv4}\n✔️ Aqui, dividimos os dados em duas tabelas separadas e adicionamos as variáveis revisadas e notas.\n:::\n:::\n:::\n:::\n\n::: footer\n\n:::\n\n\n\n## Tabelas (Tibbles) {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   R funciona particularmente bem com [dados organizados]{.b .green}\n\n::: {.fragment .mt1}\n-   Armazenamos dados organizados em [data frames]{.b .green} ou [tibbles]{.b .blue}\n    -   Tibbles são apenas tabelas mais sofisticadas<br />\n        (ou seja, eles têm alguns recursos extras)\n:::\n\n::: {.fragment .mt1}\n-   Para usar tibbles, precisamos do pacote [tidyverse]{.b .blue}\n:::\n\n::: {.fragment .mt1}\n-   Tibbles são construídos a partir de um ou mais vetores\n    -   Os vetores devem ter o [mesmo comprimento]{.b .green}\n    -   Eles podem conter [diferentes tipos]{.b .green} de dados\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li jiievwhv trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Vetores {.smaller}\n\n![](../img/vectors.png)\n\n::: {.tc .pv4}\nComeçamos com três objetos vetoriais separados que têm todos o mesmo comprimento.\n\nNós configuramos para que o $n$-ésimo vagão em cada trem corresponda à mesma observação.\n:::\n\n::: footer\n\n:::\n\n## Tibble {.smaller}\n\n![](../img/tibble.png)\n\n::: {.tc .pv4}\nEntão combinamos os vetores em um único objeto tibble (ou data frame).\n\nAgora, conforme o tibble se move, as variáveis sempre ficam juntas.\n:::\n\n::: footer\n\n:::\n\n## Tibbles - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Instale e carregue o pacote tidyverse\n\n# Extras pane > Packages tab > Install\n\nlibrary(tidyverse)\n\n# ==============================================================================\n\n# LIÇÃO: Crie um tibble a partir de vetores\n\nx <- c(10, 20, 30, 40)\nx\n\ny <- x * 2 - 4\ny\n\nmy_tibble <- tibble(x, y)\nmy_tibble\n\n# ==============================================================================\n\n# CASO DE USO: Você pode misturar diferentes tipos de vetores em um único tibble\n\nfirst_names <- c(\"Adam\", \"Billy\", \"Caitlyn\", \"Debra\")\n\nage_years <- c(12, 13, 10, NA)\n\nguests <- tibble(first_names, age_years)\nguests\n\n# ==============================================================================\n\n# DICA: Para economizar tempo, você também pode criar os vetores na chamada tibble\n\ngradebook <- tibble(\n  grade = c(95, 83, 90, 76),\n  letter = c(\"a\", \"b\", \"a-\", \"c\")\n)\ngradebook\n\n# ==============================================================================\n\n# ARMADILHA: Não tente combinar tibbles com comprimentos diferentes\n\ny <- c(1, 2, 3)\nx <- c(\"a\", \"b\")\n\ntibble(y, x) #error\n\n# ==============================================================================\n\n# LIÇÃO: No entanto, a exceção é que R irá \"reciclar\" um único valor\n\ntibble(y, x = \"a\")\n\n# ==============================================================================\n\n# LIÇÃO: Você pode \"extrair\" um vetor de um tibble usando $\n\nmytibble <- tibble(x = c(1, 2, 3, 4, 5), y = \"test\")\n\nmytibble$x\n\nmytibble$y\n\n# ==============================================================================\n\n# ARMADILHA: Não tente extrair um vetor que não existe\n\nmytibble$z #error\n```\n:::\n\n\n::: footer\n\n:::\n\n\n## Tabelas longas e largas (long x wide) {.smaller}\n\n![](../img/original-dfs-tidy.png){fig-align=\"center\"}\n\n\n::: footer\n\n:::\n\n\n\n## Tabelas longas e largas (long x wide) {.smaller}\n\n![](../img/tidyr-longer-wider.gif){fig-align=\"center\"}\n\n\n::: footer\n\n:::\n\n\n\n\n## Importação e Exportação {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   Os dados geralmente são armazenados em [arquivos de dados]{.b .green}\n    -   Importar arquivos para R é chamado [reading]{.b .blue}\n    -   Exportar arquivos de R é chamado [writing]{.b .blue}\n\n::: {.fragment .mt1}\n-   Um tipo de arquivo de dados conveniente é um CSV\n    -   Isto significa [valores separados por vírgula]{.b .green}\n    -   Um arquivo CSV é fácil de compartilhar com outras pessoas\n:::\n\n::: {.fragment .mt1}\n-   O pacote [tidyverse]{.b .green} pode ler/escrever CSVs\n    -   Outros pacotes podem ler/escrever outros tipos\n        (e.g., *readxl*, *haven*, *rio*, *googlesheets4*)\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li dhkykqke trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Read/Write - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Carregue o pacote tidyverse (se ainda não o fez)\n\nlibrary(tidyverse)\n\n# ==============================================================================\n\n# CASO DE USO: Crie um tibble e grave-o em um arquivo\n\ngradebook <- tibble(\n  id = c(123, 456, 789),\n  grade = c(\"A\", \"B\", \"A\")\n)\ngradebook\n\nwrite_csv(gradebook, file = \"gradebook.csv\")\n\n# NOTA: Você pode ver o novo arquivo no painel Extras > aba Arquivos.\n# Você pode abrir o arquivo em outro programa (por exemplo, Microsoft Excel).\n# Você também pode enviar este arquivo por e-mail para outra pessoa para compartilhá-lo.\n\n# ==============================================================================\n\n# ARMADILHA: Não troque a ordem do tibble e do file\n\nwrite_csv(\"gradebook.csv\", gradebook) # error\n\n# ==============================================================================\n\n# CASO DE USO: Ler em um arquivo contendo dados\n\nold_gradebook <- read_csv(\"gradebook.csv\")\nold_gradebook\n\n# NOTA: read_csv() examinará e adivinhará o tipo de dado de cada variável.\n# Você pode dizer a ele o tipo de dado de cada variável, mas isso é mais avançado.\n\n# ==============================================================================\n\n# ARMADILHA: Não use as funções read.csv() e write.csv()\n\nold_gradebook <- read.csv(\"gradebook.csv\") # not a tibble\nold_gradebook\n```\n:::\n\n\n::: footer\n\n:::\n\n<!-- # [Practice II](https://pittmethods.github.io/r4ss/Day_1/Day1B_Practice.html){preview-link=\"false\"} -->\n\n\n# Wrangle II\n\n## Vérbos basicos em *data wrangling* {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [tidyverse]{.b .blue} fornece ferramentas para controlar tibbles\n    -   Essas funções são nomeadas após *verbos*\n    -   Então, se você nomear seus objetos com base em *substantivos*...\n    -   ...seu código se torna mais fácil de ler\n\n::: {.fragment .mt1}\n| Substantivo(substantivo) ❌        |  Verbo(substantivo) ✔️  | \n|:----------------------|:----------------|\n| `blender(fruit)`      | `blend(fruit)`  |\n| `screwdriver(screw)`  | `drive(screw)`  |\n| `boxcutter(box)`      | `cut(box)`      |\n\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li sbiheqdr trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Verbos focados em colunas {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Selecionar]{.b .blue} retém apenas certas colunas/variáveis\n    -   [`select(TBL, VAR_KEEP, -VAR_DROP)`]{.f3}\n\n::: {.fragment .mt1}\n-   [Mutate]{.b .blue} adiciona ou transforma colunas/variáveis\n    -   [`mutate(TBL, NEW_VAR = OLD_VAR / 1000)`]{.f3}\n:::\n\n::: {.fragment .mt1}\n-   [Rename]{.b .green} altera os nomes das colunas/variáveis\n    -   [`rename(TBL, NEW_NAME = OLD_NAME)`]{.f3}\n:::\n\n::: {.fragment .mt1}\n-   [Relocate]{.b .green} altera a ordem das colunas/variáveis\n    -   [`relocate(TBL, VAR_MOVE, .after = OTHER_VAR)`]{.f3}\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li ifxlrnhk trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## *Select* - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Carregar pacote e inspecionar exemplo tibble\n\nlibrary(tidyverse) # inclui o pacote dplyr\nstarwars\n\n# ==============================================================================\n\n# CASO DE USO: Reter apenas as variáveis especificadas\n\nsw <- select(starwars, name)\nsw\nsw <- select(starwars, name, sex, species)\nsw\n\n# ==============================================================================\n\n# ARMADILHA: Não esqueça de salvar a alteração com a atribuição\n\nselect(starwars, name, sex, species)\nstarwars # ainda inclui todas as variáveis\n\n# ==============================================================================\n\n# CASO DE USO: Reter todas as variáveis entre duas variáveis\n\nsw <- select(starwars, name, hair_color:eye_color)\nsw\n\n# ==============================================================================\n\n# CASO DE USO: Reter todas as variáveis, exceto as especificadas\n\nsw <- select(starwars, -sex, -species)\nsw\nsw <- select(starwars, -c(sex, species))\nsw\nsw <- select(starwars, -c(hair_color:starships))\nsw\n```\n:::\n\n\n::: footer\n\n:::\n\n## *Mutate* - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Criar exemplo tibble\n\npatients <- tibble(\n  id = c(\"S1\", \"S2\", \"S3\"),\n  feet = c(6, 5, 5),\n  inches = c(1, 7, 2),\n  pounds = c(176.3, 124.9, 162.6)\n)\npatients\n\n# ==============================================================================\n\n# CASO DE USO: Adicionar uma ou mais variáveis\n\np2 <- mutate(patients, sex = c(\"M\", \"F\", \"F\"))\np2\n\nages <- c(32, 41, 29)\np2 <- mutate(patients, ages = ages)\np2\n\np2 <- mutate(\n  patients, \n  sex = c(\"M\", \"F\", \"F\"), \n  ages = ages\n)\np2\n\n# ==============================================================================\n\n# CASO DE USO: Calcular variáveis\n\np2 <- mutate(patients, height = feet + inches / 12)\np2\n\np2 <- mutate(patients, ln_pounds = log(pounds))\np2\n\n# ==============================================================================\n\n# CASO DE USO: Substituir variáveis\n\npatients <- mutate(patients, height = height / 3.281)\npatients\n\n# ==============================================================================\n\n# CASO DE USO: Variáveis duplicadas\n\np2 <- mutate(patients, weight = pounds)\np2 # tanto peso quanto libras existem\n```\n:::\n\n\n::: footer\n\n:::\n\n## *Rename* / *Relocate* - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CASO DE USO: Alterar o nome de uma ou mais variáveis\n\nstarwars\n\nsw <- rename(starwars, Character = name)\nsw\n\nsw <- rename(starwars, height_cm = height, mass_kg = mass)\nsw\n\n# ==============================================================================\n\n# ARMADILHA: Não troque a ordem e tente old_name = new_name\n\nsw <- rename(starwars, name = Character) # error\n\n# ==============================================================================\n\n# CASO DE USO: Mover variáveis antes ou depois de outra variável\n\nstarwars\n\nsw <- relocate(starwars, species, sex, .before = height)\nsw\n\nsw <- relocate(starwars, species, sex, .after = name)\nsw\n\n# ==============================================================================\n\n# ARMADILHA: Não se esqueça do ponto final!\n\nsw <- relocate(starwars, sex, before = height) \nsw # altura foi renomeada acidentalmente para antes\n```\n:::\n\n\n::: footer\n\n:::\n\n## Verbos focados em linha {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Arrange]{.b .blue} classifica as linhas com base em seus valores\n    -   [`arrange(TBL, VAR_SORT_UP)`]{.f3}\n    -   [`arrange(TBL, desc(VAR_SORT_DOWN))`]{.f3}\n    -   [`arrange(TBL, VAR_SORT_1ST, VAR_SORT_2ND)`]{.f3}\n\n::: {.fragment .mt1}\n-   [Filter]{.b .blue} retém certas linhas com base em critérios\n    -   [`filter(TBL, DBL_CRIT > 0)`]{.f3}\n    -   [`filter(TBL, STR_CRIT == \"A\")`]{.f3}\n    -   [`filter(TBL, CRIT1, CRIT2)`]{.f3}\n:::\n\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li dlprbpnx trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n\n## *Arrange* - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CASO DE USO: Classificar observações por uma variável\n\nstarwars\n\nsw <- arrange(starwars, height)\nsw # classificado por altura, crescente\n\nsw <- arrange(starwars, name)\nsw # classificado por nome, em ordem alfabética\n\n# ==============================================================================\n\n# CASO DE USO: Classificar observações por uma variável, em ordem reversa\n\nsw <- arrange(starwars, desc(height))\nsw # classificado por altura, decrescente\n\nsw <- arrange(starwars, desc(name))\nsw # classificado por nome, em ordem alfabética reversa\n\n# ==============================================================================\n\n# CASO DE USO: Classificar observações por múltiplas variáveis\n\nsw <- arrange(starwars, hair_color, mass)\nsw # classificado por cor do cabelo, então os empates são quebrados por massa\n```\n:::\n\n\n::: footer\n\n:::\n\n## *Filter* - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CASO DE USO: Reter apenas observações que atendem a um critério\n\nsw <- filter(starwars, mass > 100)\nsw # apenas observações com massa maior que 100\n\nsw <- filter(starwars, mass <= 100)\nsw # apenas observações com massa menor ou igual a 100\n\nsw <- filter(starwars, species == \"Human\")\nsw # apenas observações com espécies iguais ao Humano\n\nsw <- filter(starwars, species != \"Human\")\nsw # apenas observações com espécies diferentes do Humano\n\n# ==============================================================================\n\n# ARMADILHA: Não tente usar um único = para testar igualdade\n\nsw <- filter(starwars, height = 150) # error\n\nsw <- filter(starwars, height == 150) # correct\nsw \n\n# ==============================================================================\n\n# ARMADILHA: Não se esqueça de que R diferencia maiúsculas de minúsculas\n\nsw <- filter(starwars, species == \"human\")\nsw # nenhuma observação restante (porque deveria ser Humano)\n\n# ==============================================================================\n\n# CASO DE USO: Reter apenas observações que atendem a critérios complexos\n\nsw <- filter(starwars, mass > 100 & height > 200)\nsw # apenas observações com massa acima de 100 E altura acima de 200\n\nsw <- filter(starwars, height < 100 | hair_color == \"none\")\nsw # somente observações com altura menor que 100 OU hair_color igual a nenhum\n\n# ==============================================================================\n\n# ARMADILHA: Não se esqueça de preencher as duas condições\n\nsw <- filter(starwars, mass > 100 & < 200) # error\n\nsw <- filter(starwars, mass > 100 & mass < 200) # correto\nsw\n\n# ==============================================================================\n\n# ARMADILHA: Não tente igualar uma string a um vetor\n\nsw <- filter(starwars, species == c(\"Human\", \"Droid\")) # error\n\nsw <- filter(starwars, species %in% c(\"Human\", \"Droid\")) # correct\nsw\n```\n:::\n\n\n::: footer\n\n:::\n\n## *Filter* Cheatsheet {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\" .mytable}\n\n| Symbol | Description                 | Numérico | Charactere   |\n|--------|-----------------------------|----------|--------------|\n| `<`    | Menor que                   | Sim      | *Não*        |\n| `<=`   | Menor ou igual á            | Sim      | *Não*        |\n| `>`    | Maior que                   | Sim      | *Não*        |\n| `>=`   | Maior ou igual á            | Sim      | *Não*        |\n| `==`   | Igual á                     | Sim      | Sim          |\n| `!=`   | diferente de                | Sim      | Sim          |\n| `%in%` | Encontre em                 | Sim      | Sim          |\n| `&`    | Lógico - \"E\"                | Sim      | Sim          |\n| `|`    | Lógico - \"Ou\"               | Sim      | Sim          |\n\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li esixrdij trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n<!-- Program III -->\n\n# Wrangle III\n\n## Pipes & Pipelines {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n- Como podemos fazer [operações múltiplas]{.b .green} em um objeto?\n    1. `x <- 10`\n    2. `x2 <- sqrt(x)`\n    3. `x3 <- round(x2)`\n    \n::: {.fragment .mt1}\n- Isso funciona, mas é **incômodo** e **propenso a erros**\n:::\n\n::: {.fragment .mt1}\n- Uma abordagem melhor é usar [pipes]{.b .blue} e [pipelines]{.b .green}\n    - `x3 <- 10 %>% sqrt() %>% round()`\n:::\n\n::: {.fragment .mt1}\n- Gosto de ler `%>%` (ou `|>`) como \"e então...\"\n    - \"Pegue 10 e então sqrt() e então round()\"\n:::\n    \n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li mhttdvjl trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Pipes - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Habilitar o atalho do operador de pipe\n\n# Tools > Global Options... > Code tab > Check \"Use Native Pipe Operator\"\n\n# Digite |> ou pressione Ctrl+Shift+M (Windows) / Cmd+Shift+M (Mac)\n\n# ==============================================================================\n\n# LIÇÃO: O pipe envia objetos para uma função como seu primeiro argumento\n\n# MODELO: x |> function_name() é o mesmo que function_name(x)\n\nx <- 10\n\ny <- sqrt(x)\ny\n\ny <- x |> sqrt()\ny\n\n# ==============================================================================\n\n# ARMADILHA: Não se esqueça de remover o objeto da chamada de função\n\nx |> sqrt(x) # wrong\n\nx |> sqrt() # correto\n\n# ==============================================================================\n\n# CASO DE USO: Você ainda pode usar argumentos ao canalizar\n\nz <- round(3.14, digits = 1)\nz\n\nz <- 3.14 |> round(digits = 1)\nz\n\n# ==============================================================================\n\n# USECASE: Pipes são úteis com tibbles e funções para data wrangling\n\nstarwars\n\nsw <- select(starwars, name, species, height)\nsw\n\nsw <- starwars |> select(name, species, height)\nsw\n\n# ==============================================================================\n\n# ARMADILHA: Não adicione um pipe sem um passo depois dele\n\nsw <- starwars |> select(name, species, height) |> # error\n```\n:::\n\n\n::: footer\n\n:::\n\n## Pipelines - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CASO DE USO: Você pode encadear vários pipes para criar um pipeline\n\nx <- 10 |> sqrt() |> round()\nx\n\n# ==============================================================================\n\n# DICA: Se você quiser ver a saída de um pipeline, você pode canalizar para print()\n\nx <- 10 |> sqrt() |> round() |> print()\n\n# ==============================================================================\n\n# DICA: Para tornar seus pipelines mais legíveis, mova cada etapa para uma nova linha\n\nx <- \n  10 |> \n  sqrt() |> \n  round() |>\n  print()\n\n# ==============================================================================\n\n# ARMADILHA: Não coloque o pipe no início de uma linha\n\nx <- \n  10 \n  |> sqrt()\n  |> round()\n  |> print() # error\n\n# ==============================================================================\n\n# CASO DE USO: Encadeie uma série de verbos para controlar dados de forma flexível\n\ntallones <- \n  starwars |> \n  select(name, species, height) |> \n  rename(height_cm = height) |> \n  mutate(height_ft = height_cm / 30.48) |>  \n  filter(height_ft > 7) |> \n  arrange(desc(height_ft)) |>  \n  print()\n```\n:::\n\n\n::: footer\n\n:::\n\n## Factors {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Factors]{.b .blue} são usados para representar dados categóricos\n    -   Os fatores têm múltiplos [níveis] possíveis{.b .blue}\n    -   Os níveis são [discretos]{.b .green} e mutuamente exclusivos\n\n::: {.fragment .mt1}\n-   Às vezes, as categorias são [não ordenadas]{.b .green} (nominais)\n    -   Ação ou Comédia ou Drama\n    -   Ásia ou Europa ou América do Norte\n:::\n\n::: {.fragment .mt1}\n-   Às vezes, as categorias são [ordenadas]{.b .green} (ordinal)\n    -   Suave < Médio < Picante\n    -   XS < S < M < L < XL\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li cdbgwqyw trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Factors - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CASO DE USO: Peça a 10 crianças para pedirem 1: nuggets, 2: pizza ou 3: salada\n\nfood <- c(2, 2, 1, 2, 1, 2, 1, 1, 2, 2)\nfood\n\n# ==============================================================================\n\n# LIÇÃO: Podemos transformar esse vetor em um fator com a função factor()\n\nfood2 <- factor(food, levels = c(1, 2, 3))\nfood2\n\nfood3 <- factor(food, levels = c(1, 2, 3),\n                labels = c(\"nuggets\", \"pizza\", \"salad\"))\nfood3\n\n# ==============================================================================\n\n# CASO DE USO: Também podemos contar cada nível de forma rápida e fácil com a função table()\n\ntable(food3)\n\n# ==============================================================================\n\n# ARMADILHA: Não confunda níveis e rótulos (level/label)\n\nfood4 <- factor(food, labels = c(1, 2, 3),\n                levels = c(\"nuggets\", \"pizza\", \"salad\"))\nfood4 # cheio de <NA> porque não consegue encontrar esses níveis\n\n# ==============================================================================\n\n# CASO DE USO: Você também pode simplesmente inserir strings diretamente (como auto-rótulos)\n\ngenre <- c(\"pop\", \"metal\", \"pop\", \"rock\", \"rap\", \"rap\", \"pop\", \"rock\")\ngenre\n\ngenre2 <- factor(genre) # os níveis observados serão atribuídos em ordem alfabética\ngenre2\n\ntable(genre2)\n\n# ==============================================================================\n\n# LIÇÃO: Se ordinal, insira os níveis de baixo para alto e adicione ordenado = VERDADEIRO\n\nsalsa <- c(\"hot\", \"mild\", \"medium\", \"mild\", \"medium\", \"medium\")\n\nsalsa2 <- factor(salsa, \n                 levels = c(\"mild\", \"medium\", \"hot\"), \n                 ordered = TRUE)\nsalsa2 \n\n# NOTA: Podemos querer visualizar ou modelar fatores ordinais de forma diferente\n\n# ==============================================================================\n\n# CASO DE USO: Trabalhando com fatores em um tibble\n\ncereal <- read_csv(\"cereal.csv\")\ncereal\n\ncereal2 <- mutate(cereal, mfr = factor(mfr), type = factor(type))\ncereal2\n\ntable(cereal2$mfr)\n\ntable(cereal2$type)\n```\n:::\n\n\n::: footer\n\n:::\n\n## Valores ausentes {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   Às vezes, seus dados terão [valores ausentes]{.b .blue}\n    -   Talvez estes [nunca tenham sido coletados]{.b .green}\n    -   Talvez os valores tenham sido [perdidos/corrompidos]{.b .green}\n    -   Talvez o participante [não respondeu]{.b .green}\n\n::: {.fragment .mt1}\n-   Precisamos dizer a R quais valores estão faltando\n    -   Para fazer isso, definimos esses valores como `NA`\n    -   As funções do **tidyverse** tornam isso fácil\n:::\n\n::: {.fragment .mt1}\n-   A ausência é frequentemente [\"contagiosa\"]{.b .green} em R<br />\n    por exemplo, um vetor com `NA` tem uma média desconhecida\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li rwotyanb trigger=loop delay=3000 speed=0.5 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Valores ausentes - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Precisaremos do tidyverse para as funções de leitura e mutação\n\nlibrary(tidyverse)\n\n# ==============================================================================\n\n# ARMADILHA: Códigos numéricos para ausências irão atrapalhar os cálculos em R\n\nheights <- c(149, 158, -999) # aqui usamos -999 para representar um valor ausente\n\nrange(heights)\n\nmean(heights)\n\nlog(heights) # nosso valor ausente não é mais -999\n\n# ==============================================================================\n\n# CASO DE USO: Use NA para ausência em vez disso\n\nheights2 <- c(149, 158, NA)\nheights2\n\nlog(heights2) # a NA continuou sendo NA (devido à contagiosidade)\n\n# ==============================================================================\n\n# LIÇÃO: Use na.rm = TRUE para fazer uma função de resumo ignorando os NAs\n\nmean(heights2) # a média é um NA (devido à contagiosidade)\n\nmean(heights2, na.rm = TRUE)\n\nrange(heights2, na.rm = TRUE)\n\n# ==============================================================================\n\n# CASO DE USO: Lidando com valores ausentes em tibbles\n\ncereal <- read_csv(\"cereal.csv\")\n\ncereal$rating\n\nrange(cereal$rating)\n\n# ==============================================================================\n\n# LIÇÃO: Use na_if() para converter valores específicos para NA durante a modificação\n\ncereal2 <- cereal %>% mutate(rating = na_if(rating, -999))\n\ncereal2$rating\n\nrange(cereal2$rating, na.rm = TRUE)\n\n# ==============================================================================\n\n# LIÇÃO: Use read_csv(na) para converter valores específicos para NA durante a leitura\n\ncereal3 <- read_csv(\"cereal.csv\", na = \"-999\")\n\ncereal3$rating\n\nrange(cereal3$rating, na.rm = TRUE)\n```\n:::\n\n\n::: footer\n\n:::\n\n<!-- Practice III -->\n\n<!-- # [Practice III](https://pittmethods.github.io/r4ss/Day_2/Day2A_Practice.html){preview-link=\"false\"} -->\n\n\n\n# Wrangle IV\n\n## Summarize {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   Embora armazenemos dados sobre muitas observações...\n-   ...frequentemente queremos [resumir]{.b .blue} observações\n    -   Isto é como [dobrar]{.b .green} o tibble para [uma linha]{.b .green}\n\n::: {.fragment .mt1}\n-   Vimos funções que resumem vetores\n    -   `length()`, `sum()`, `min()`, `max()`\n    -   `mean()`, `median()`, `sd()`, `var()`\n:::\n\n::: {.fragment .mt1}\n-   `summarize()` nos permite usá-los em tibbles\n    -   Funciona de forma muito semelhante a `mutate()`\n    -   Ele sempre cria um tibble como saída\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li uhmqrsgl trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Summarize - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Precisaremos do tidyverse e de um conjunto de dados de exemplo\n\nlibrary(tidyverse)\n\nsales <- \n  tibble(\n    customer = c(1, 2, 3, 1, 3),\n    store = c(\"A\", \"A\", \"A\", \"B\", \"B\"),\n    items = c(25, 20, 16, 10, 5),\n    spent = c(685, 590, 392, 185, 123)\n  ) |> \n  print()\n\n# ==============================================================================\n\n# CASO DE USO: Resuma as vendas típicas\n\nmy_summary <- \n  sales |> \n  summarize(\n    avg_items = mean(items),\n    avg_spent = mean(spent)\n  ) |> \n  print()\n\n# ==============================================================================\n\n# ARMADILHA: Não use summary() em vez de summarise()\n\nmy_summary <- \n  sales |> \n  summary(\n    avg_items = mean(items),\n    avg_spent = mean(spent)\n  ) |> \n  print() # não é um tibble\n\n# ==============================================================================\n\n# CASO DE USO: Use mais de uma função de resumo\n\nmy_summary <- \n  sales |> \n  summarize(\n    total_items = sum(items),\n    total_spent = sum(spent),\n    avg_items = mean(items),\n    avg_spent = mean(spent)\n  ) |> \n  print()\n\n# ==============================================================================\n\n# CASO DE USO: Usar funções de contagem\n\nmy_counts <- \n  sales |> \n  summarize(\n    n_sales = n(),\n    n_customers = n_distinct(customer),\n    n_stores = n_distinct(store)\n  ) |> \n  print()\n```\n:::\n\n\n::: footer\n\n:::\n\n## Group Summarize {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n- Também podemos resumir um tibble [por grupo]{.b .blue}\n    -   Isto é como [dobrar]{.b .green} o tibble várias vezes\n    -   Especificamente, dobramos para [uma linha por grupo]{.b .green}\n\n::: {.fragment .mt1}\n-  A sintaxe para resumir é idêntica\n    -   A única diferença é o tibble\n    -   Primeiro passamos por `group_by()`\n    -   Os pipelines tornam isso muito fácil\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li pmwtbpap trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Group Summarize - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Precisaremos do tidyverse e de um conjunto de dados de exemplo\n\nlibrary(tidyverse)\n\nsales <- \n  tibble(\n    customer = c(1, 2, 3, 1, 3),\n    store = c(\"A\", \"A\", \"A\", \"B\", \"B\"),\n    items = c(25, 20, 16, 10, 5),\n    spent = c(685, 590, 392, 185, 123)\n  ) |> \n  print()\n\n# ==============================================================================\n\n# LIÇÃO: Passamos um tibble por group_by para agrupá-lo\n\nsales\n\nsales |> group_by(store) # observe que o display diz \"agrupado\"\n\n# ==============================================================================\n\n# CASO DE USO: Podemos então resumir e obter estatísticas por grupo\n\nsales |> \n  group_by(store) |> \n  summarize(\n    customers = n_distinct(customer),\n    items_sold = sum(items),\n    total_sales = sum(spent),\n    avg_items = mean(items),\n    avg_spent = mean(spent)\n  )\n\n# ==============================================================================\n\n# CONFIGURAÇÃO: Vamos obter um conjunto de dados maior e mais realista\n\n# Extra pane > Packages tab > Install > nycflights13\n\nlibrary(\"nycflights13\")\n\nflights\n\n# ==============================================================================\n\n# CASO DE USO: Encontre a transportadora com os menores atrasos médios\n\nflights |> \n  group_by(carrier) |> \n  summarize(m_delay = mean(dep_delay, na.rm = TRUE)) |> \n  arrange(m_delay)\n\n# ==============================================================================\n\n# LIÇÃO: Também podemos agrupar por múltiplas variáveis\n\n# CASO DE USO: Vamos encontrar o dia do ano com mais voos\n\nflights |> \n  group_by(month, day) |> \n  summarize(n_flights = n()) |> \n  arrange(desc(n_flights))\n```\n:::\n\n\n::: footer\n\n:::\n\n<!-- Visualize I -->\n\n# DataViz I\n\n## O que é um gráfico? {.smaller}\n\n::: {.pv4 .tc}\n![](../img/graphics.png)\n\n::: {.fragment}\nUma [visualização de dados]{.b .blue} que expressa os [dados]{.b .green} por meio de [estética visual]{.b .green}.\n:::\n:::\n\n::: footer\n\n:::\n\n\n## Por que expressamos dados em um gráfico? {.smaller}\n\n<br>\n<br>\n\n<br>\n<br>\n\n::: {.fragment}\nPorque é importante [visualizar]{.b .blue} dados antes de aplicar testes estatísticos [inferenciais]{.b .green} e [descritivas]{.b .green}.\n\n:::\n::: footer\n\n:::\n\n\n\n## Quarteto de Anscombe {.smaller}\n\n::: {.pv4 .tc}\n![](../img/anscombe.png)\n\n::: {.fragment}\n\nAnscombe, F. J. (1973). Graphs in statistical analysis. The American Statistician, 27(1), 17–21.\n\n:::\n:::\n\n::: footer\n\n:::\n\n\n\n## Quarteto de Anscombe {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"40%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"axnytsjguy\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#axnytsjguy table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#axnytsjguy thead, #axnytsjguy tbody, #axnytsjguy tfoot, #axnytsjguy tr, #axnytsjguy td, #axnytsjguy th {\n  border-style: none;\n}\n\n#axnytsjguy p {\n  margin: 0;\n  padding: 0;\n}\n\n#axnytsjguy .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#axnytsjguy .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#axnytsjguy .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#axnytsjguy .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#axnytsjguy .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#axnytsjguy .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#axnytsjguy .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#axnytsjguy .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#axnytsjguy .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#axnytsjguy .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#axnytsjguy .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#axnytsjguy .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#axnytsjguy .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#axnytsjguy .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#axnytsjguy .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#axnytsjguy .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#axnytsjguy .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#axnytsjguy .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#axnytsjguy .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#axnytsjguy .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#axnytsjguy .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#axnytsjguy .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#axnytsjguy .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#axnytsjguy .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#axnytsjguy .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#axnytsjguy .gt_left {\n  text-align: left;\n}\n\n#axnytsjguy .gt_center {\n  text-align: center;\n}\n\n#axnytsjguy .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#axnytsjguy .gt_font_normal {\n  font-weight: normal;\n}\n\n#axnytsjguy .gt_font_bold {\n  font-weight: bold;\n}\n\n#axnytsjguy .gt_font_italic {\n  font-style: italic;\n}\n\n#axnytsjguy .gt_super {\n  font-size: 65%;\n}\n\n#axnytsjguy .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#axnytsjguy .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#axnytsjguy .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#axnytsjguy .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#axnytsjguy .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#axnytsjguy .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#axnytsjguy .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#axnytsjguy .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#axnytsjguy div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"9\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Quarteto de Anscombe</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"x1\">x1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"x2\">x2</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"x3\">x3</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"x4\">x4</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"y1\">y1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"y2\">y2</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"y3\">y3</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"y4\">y4</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_right gt_stub\">1</th>\n<td headers=\"stub_1_1 x1\" class=\"gt_row gt_right\">10</td>\n<td headers=\"stub_1_1 x2\" class=\"gt_row gt_right\">10</td>\n<td headers=\"stub_1_1 x3\" class=\"gt_row gt_right\">10</td>\n<td headers=\"stub_1_1 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_1 y1\" class=\"gt_row gt_right\">8.04</td>\n<td headers=\"stub_1_1 y2\" class=\"gt_row gt_right\">9.14</td>\n<td headers=\"stub_1_1 y3\" class=\"gt_row gt_right\">7.46</td>\n<td headers=\"stub_1_1 y4\" class=\"gt_row gt_right\">6.58</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_right gt_stub\">2</th>\n<td headers=\"stub_1_2 x1\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_2 x2\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_2 x3\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_2 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_2 y1\" class=\"gt_row gt_right\">6.95</td>\n<td headers=\"stub_1_2 y2\" class=\"gt_row gt_right\">8.14</td>\n<td headers=\"stub_1_2 y3\" class=\"gt_row gt_right\">6.77</td>\n<td headers=\"stub_1_2 y4\" class=\"gt_row gt_right\">5.76</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_right gt_stub\">3</th>\n<td headers=\"stub_1_3 x1\" class=\"gt_row gt_right\">13</td>\n<td headers=\"stub_1_3 x2\" class=\"gt_row gt_right\">13</td>\n<td headers=\"stub_1_3 x3\" class=\"gt_row gt_right\">13</td>\n<td headers=\"stub_1_3 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_3 y1\" class=\"gt_row gt_right\">7.58</td>\n<td headers=\"stub_1_3 y2\" class=\"gt_row gt_right\">8.74</td>\n<td headers=\"stub_1_3 y3\" class=\"gt_row gt_right\">12.74</td>\n<td headers=\"stub_1_3 y4\" class=\"gt_row gt_right\">7.71</td></tr>\n    <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_right gt_stub\">4</th>\n<td headers=\"stub_1_4 x1\" class=\"gt_row gt_right\">9</td>\n<td headers=\"stub_1_4 x2\" class=\"gt_row gt_right\">9</td>\n<td headers=\"stub_1_4 x3\" class=\"gt_row gt_right\">9</td>\n<td headers=\"stub_1_4 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_4 y1\" class=\"gt_row gt_right\">8.81</td>\n<td headers=\"stub_1_4 y2\" class=\"gt_row gt_right\">8.77</td>\n<td headers=\"stub_1_4 y3\" class=\"gt_row gt_right\">7.11</td>\n<td headers=\"stub_1_4 y4\" class=\"gt_row gt_right\">8.84</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_right gt_stub\">5</th>\n<td headers=\"stub_1_5 x1\" class=\"gt_row gt_right\">11</td>\n<td headers=\"stub_1_5 x2\" class=\"gt_row gt_right\">11</td>\n<td headers=\"stub_1_5 x3\" class=\"gt_row gt_right\">11</td>\n<td headers=\"stub_1_5 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_5 y1\" class=\"gt_row gt_right\">8.33</td>\n<td headers=\"stub_1_5 y2\" class=\"gt_row gt_right\">9.26</td>\n<td headers=\"stub_1_5 y3\" class=\"gt_row gt_right\">7.81</td>\n<td headers=\"stub_1_5 y4\" class=\"gt_row gt_right\">8.47</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_right gt_stub\">6</th>\n<td headers=\"stub_1_6 x1\" class=\"gt_row gt_right\">14</td>\n<td headers=\"stub_1_6 x2\" class=\"gt_row gt_right\">14</td>\n<td headers=\"stub_1_6 x3\" class=\"gt_row gt_right\">14</td>\n<td headers=\"stub_1_6 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_6 y1\" class=\"gt_row gt_right\">9.96</td>\n<td headers=\"stub_1_6 y2\" class=\"gt_row gt_right\">8.10</td>\n<td headers=\"stub_1_6 y3\" class=\"gt_row gt_right\">8.84</td>\n<td headers=\"stub_1_6 y4\" class=\"gt_row gt_right\">7.04</td></tr>\n    <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_right gt_stub\">7</th>\n<td headers=\"stub_1_7 x1\" class=\"gt_row gt_right\">6</td>\n<td headers=\"stub_1_7 x2\" class=\"gt_row gt_right\">6</td>\n<td headers=\"stub_1_7 x3\" class=\"gt_row gt_right\">6</td>\n<td headers=\"stub_1_7 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_7 y1\" class=\"gt_row gt_right\">7.24</td>\n<td headers=\"stub_1_7 y2\" class=\"gt_row gt_right\">6.13</td>\n<td headers=\"stub_1_7 y3\" class=\"gt_row gt_right\">6.08</td>\n<td headers=\"stub_1_7 y4\" class=\"gt_row gt_right\">5.25</td></tr>\n    <tr><th id=\"stub_1_8\" scope=\"row\" class=\"gt_row gt_right gt_stub\">8</th>\n<td headers=\"stub_1_8 x1\" class=\"gt_row gt_right\">4</td>\n<td headers=\"stub_1_8 x2\" class=\"gt_row gt_right\">4</td>\n<td headers=\"stub_1_8 x3\" class=\"gt_row gt_right\">4</td>\n<td headers=\"stub_1_8 x4\" class=\"gt_row gt_right\">19</td>\n<td headers=\"stub_1_8 y1\" class=\"gt_row gt_right\">4.26</td>\n<td headers=\"stub_1_8 y2\" class=\"gt_row gt_right\">3.10</td>\n<td headers=\"stub_1_8 y3\" class=\"gt_row gt_right\">5.39</td>\n<td headers=\"stub_1_8 y4\" class=\"gt_row gt_right\">12.50</td></tr>\n    <tr><th id=\"stub_1_9\" scope=\"row\" class=\"gt_row gt_right gt_stub\">9</th>\n<td headers=\"stub_1_9 x1\" class=\"gt_row gt_right\">12</td>\n<td headers=\"stub_1_9 x2\" class=\"gt_row gt_right\">12</td>\n<td headers=\"stub_1_9 x3\" class=\"gt_row gt_right\">12</td>\n<td headers=\"stub_1_9 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_9 y1\" class=\"gt_row gt_right\">10.84</td>\n<td headers=\"stub_1_9 y2\" class=\"gt_row gt_right\">9.13</td>\n<td headers=\"stub_1_9 y3\" class=\"gt_row gt_right\">8.15</td>\n<td headers=\"stub_1_9 y4\" class=\"gt_row gt_right\">5.56</td></tr>\n    <tr><th id=\"stub_1_10\" scope=\"row\" class=\"gt_row gt_right gt_stub\">10</th>\n<td headers=\"stub_1_10 x1\" class=\"gt_row gt_right\">7</td>\n<td headers=\"stub_1_10 x2\" class=\"gt_row gt_right\">7</td>\n<td headers=\"stub_1_10 x3\" class=\"gt_row gt_right\">7</td>\n<td headers=\"stub_1_10 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_10 y1\" class=\"gt_row gt_right\">4.82</td>\n<td headers=\"stub_1_10 y2\" class=\"gt_row gt_right\">7.26</td>\n<td headers=\"stub_1_10 y3\" class=\"gt_row gt_right\">6.42</td>\n<td headers=\"stub_1_10 y4\" class=\"gt_row gt_right\">7.91</td></tr>\n    <tr><th id=\"stub_1_11\" scope=\"row\" class=\"gt_row gt_right gt_stub\">11</th>\n<td headers=\"stub_1_11 x1\" class=\"gt_row gt_right\">5</td>\n<td headers=\"stub_1_11 x2\" class=\"gt_row gt_right\">5</td>\n<td headers=\"stub_1_11 x3\" class=\"gt_row gt_right\">5</td>\n<td headers=\"stub_1_11 x4\" class=\"gt_row gt_right\">8</td>\n<td headers=\"stub_1_11 y1\" class=\"gt_row gt_right\">5.68</td>\n<td headers=\"stub_1_11 y2\" class=\"gt_row gt_right\">4.74</td>\n<td headers=\"stub_1_11 y3\" class=\"gt_row gt_right\">5.73</td>\n<td headers=\"stub_1_11 y4\" class=\"gt_row gt_right\">6.89</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\n::: {.column .tc .pv5 width=\"60%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"kmlescuzfq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#kmlescuzfq table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#kmlescuzfq thead, #kmlescuzfq tbody, #kmlescuzfq tfoot, #kmlescuzfq tr, #kmlescuzfq td, #kmlescuzfq th {\n  border-style: none;\n}\n\n#kmlescuzfq p {\n  margin: 0;\n  padding: 0;\n}\n\n#kmlescuzfq .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#kmlescuzfq .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#kmlescuzfq .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#kmlescuzfq .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#kmlescuzfq .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#kmlescuzfq .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#kmlescuzfq .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#kmlescuzfq .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#kmlescuzfq .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#kmlescuzfq .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#kmlescuzfq .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#kmlescuzfq .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#kmlescuzfq .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#kmlescuzfq .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#kmlescuzfq .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kmlescuzfq .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#kmlescuzfq .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#kmlescuzfq .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#kmlescuzfq .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kmlescuzfq .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#kmlescuzfq .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kmlescuzfq .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#kmlescuzfq .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kmlescuzfq .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kmlescuzfq .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kmlescuzfq .gt_left {\n  text-align: left;\n}\n\n#kmlescuzfq .gt_center {\n  text-align: center;\n}\n\n#kmlescuzfq .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#kmlescuzfq .gt_font_normal {\n  font-weight: normal;\n}\n\n#kmlescuzfq .gt_font_bold {\n  font-weight: bold;\n}\n\n#kmlescuzfq .gt_font_italic {\n  font-style: italic;\n}\n\n#kmlescuzfq .gt_super {\n  font-size: 65%;\n}\n\n#kmlescuzfq .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#kmlescuzfq .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#kmlescuzfq .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#kmlescuzfq .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#kmlescuzfq .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#kmlescuzfq .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#kmlescuzfq .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#kmlescuzfq .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#kmlescuzfq div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_title gt_font_normal\" style>Estatísticas Descritivas do Quarteto de Anscombe</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Agrupadas por Conjunto</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipDYXJhY3RlcsOtc3RpY2FzKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Características&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipDYXJhY3RlcsOtc3RpY2FzKio=\"><div class='gt_from_md'><p><strong>Características</strong></p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KioxKiogIApOID0gMTE=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;br /&gt;&#10;N = 11&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KioxKiogIApOID0gMTE=\"><div class='gt_from_md'><p><strong>1</strong><br />\nN = 11</p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KioyKiogIApOID0gMTE=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;br /&gt;&#10;N = 11&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KioyKiogIApOID0gMTE=\"><div class='gt_from_md'><p><strong>2</strong><br />\nN = 11</p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KiozKiogIApOID0gMTE=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;br /&gt;&#10;N = 11&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KiozKiogIApOID0gMTE=\"><div class='gt_from_md'><p><strong>3</strong><br />\nN = 11</p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;Kio0KiogIApOID0gMTE=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;br /&gt;&#10;N = 11&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"Kio0KiogIApOID0gMTE=\"><div class='gt_from_md'><p><strong>4</strong><br />\nN = 11</p>\n</div></div></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">x</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    Média</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">9.00</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">9.00</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">9.00</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">9.00</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    Desvio Padrão</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">3.32</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">3.32</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">3.32</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">3.32</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">y</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    Média</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">7.50</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">7.50</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">7.50</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">7.50</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-style: italic;\">    Desvio Padrão</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">2.03</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">2.03</td>\n<td headers=\"stat_3\" class=\"gt_row gt_center\">2.03</td>\n<td headers=\"stat_4\" class=\"gt_row gt_center\">2.03</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n\n\n## Quarteto de Anscombe {.smaller}\n\n::: {.pv4 .tc}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"gpyzamraqf\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#gpyzamraqf table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#gpyzamraqf thead, #gpyzamraqf tbody, #gpyzamraqf tfoot, #gpyzamraqf tr, #gpyzamraqf td, #gpyzamraqf th {\n  border-style: none;\n}\n\n#gpyzamraqf p {\n  margin: 0;\n  padding: 0;\n}\n\n#gpyzamraqf .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#gpyzamraqf .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#gpyzamraqf .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#gpyzamraqf .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#gpyzamraqf .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#gpyzamraqf .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#gpyzamraqf .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#gpyzamraqf .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#gpyzamraqf .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#gpyzamraqf .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#gpyzamraqf .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#gpyzamraqf .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#gpyzamraqf .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#gpyzamraqf .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#gpyzamraqf .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyzamraqf .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#gpyzamraqf .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#gpyzamraqf .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#gpyzamraqf .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyzamraqf .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#gpyzamraqf .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyzamraqf .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#gpyzamraqf .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyzamraqf .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gpyzamraqf .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gpyzamraqf .gt_left {\n  text-align: left;\n}\n\n#gpyzamraqf .gt_center {\n  text-align: center;\n}\n\n#gpyzamraqf .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#gpyzamraqf .gt_font_normal {\n  font-weight: normal;\n}\n\n#gpyzamraqf .gt_font_bold {\n  font-weight: bold;\n}\n\n#gpyzamraqf .gt_font_italic {\n  font-style: italic;\n}\n\n#gpyzamraqf .gt_super {\n  font-size: 65%;\n}\n\n#gpyzamraqf .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#gpyzamraqf .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#gpyzamraqf .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#gpyzamraqf .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#gpyzamraqf .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#gpyzamraqf .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#gpyzamraqf .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#gpyzamraqf .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#gpyzamraqf div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Correlações do Quarteto de Anscombe</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"conjunto\">conjunto</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"correlação\">correlação</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"conjunto\" class=\"gt_row gt_center\">1</td>\n<td headers=\"correlação\" class=\"gt_row gt_right\">0.8164205</td></tr>\n    <tr><td headers=\"conjunto\" class=\"gt_row gt_center\">2</td>\n<td headers=\"correlação\" class=\"gt_row gt_right\">0.8162365</td></tr>\n    <tr><td headers=\"conjunto\" class=\"gt_row gt_center\">3</td>\n<td headers=\"correlação\" class=\"gt_row gt_right\">0.8162867</td></tr>\n    <tr><td headers=\"conjunto\" class=\"gt_row gt_center\">4</td>\n<td headers=\"correlação\" class=\"gt_row gt_right\">0.8165214</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"2\"><div data-qmd-base64=\"Kk9ic2VydmHDp8OjbzogQ29ycmVsYcOnw6NvIGNhbGN1bGFkYSBjb25mb3JtZSBhIGNvcnJlbGHDp8OjbyBkZSBQZWFyc29uKg==\"><div class='gt_from_md'><p><em>Observação: Correlação calculada conforme a correlação de Pearson</em></p>\n</div></div></td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\n::: footer\n\n:::\n\n\n\n\n## Quarteto de Anscombe {.smaller}\n\n::: {.pv4 .tc}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"zuxmmdyjna\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#zuxmmdyjna table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#zuxmmdyjna thead, #zuxmmdyjna tbody, #zuxmmdyjna tfoot, #zuxmmdyjna tr, #zuxmmdyjna td, #zuxmmdyjna th {\n  border-style: none;\n}\n\n#zuxmmdyjna p {\n  margin: 0;\n  padding: 0;\n}\n\n#zuxmmdyjna .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#zuxmmdyjna .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#zuxmmdyjna .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#zuxmmdyjna .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#zuxmmdyjna .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#zuxmmdyjna .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#zuxmmdyjna .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#zuxmmdyjna .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#zuxmmdyjna .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#zuxmmdyjna .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#zuxmmdyjna .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#zuxmmdyjna .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#zuxmmdyjna .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#zuxmmdyjna .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#zuxmmdyjna .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuxmmdyjna .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#zuxmmdyjna .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#zuxmmdyjna .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#zuxmmdyjna .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuxmmdyjna .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#zuxmmdyjna .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuxmmdyjna .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#zuxmmdyjna .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuxmmdyjna .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zuxmmdyjna .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuxmmdyjna .gt_left {\n  text-align: left;\n}\n\n#zuxmmdyjna .gt_center {\n  text-align: center;\n}\n\n#zuxmmdyjna .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#zuxmmdyjna .gt_font_normal {\n  font-weight: normal;\n}\n\n#zuxmmdyjna .gt_font_bold {\n  font-weight: bold;\n}\n\n#zuxmmdyjna .gt_font_italic {\n  font-style: italic;\n}\n\n#zuxmmdyjna .gt_super {\n  font-size: 65%;\n}\n\n#zuxmmdyjna .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#zuxmmdyjna .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#zuxmmdyjna .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#zuxmmdyjna .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#zuxmmdyjna .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#zuxmmdyjna .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#zuxmmdyjna .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#zuxmmdyjna .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#zuxmmdyjna div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"8\" class=\"gt_heading gt_title gt_font_normal\" style>Modelo de Regressão Linear do Quarteto de Anscombe</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"8\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style><div data-qmd-base64=\"RsOzcm11bGE6IGB5IH4geGA=\"><div class='gt_from_md'><p>Fórmula: <code>y ~ x</code></p>\n</div></div></td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Conjunto\">Conjunto</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"estimate\">estimate</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"std.error\">std.error</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"p.value.x\">p.value.x</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"conf.low\">conf.low</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"conf.high\">conf.high</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"r.squared\">r.squared</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"adj.r.squared\">adj.r.squared</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Conjunto\" class=\"gt_row gt_right\">1</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">0.5000909</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">0.1179055</td>\n<td headers=\"p.value.x\" class=\"gt_row gt_right\">0.002169629</td>\n<td headers=\"conf.low\" class=\"gt_row gt_right\">0.2333701</td>\n<td headers=\"conf.high\" class=\"gt_row gt_right\">0.7668117</td>\n<td headers=\"r.squared\" class=\"gt_row gt_right\">0.6665425</td>\n<td headers=\"adj.r.squared\" class=\"gt_row gt_right\">0.6294916</td></tr>\n    <tr><td headers=\"Conjunto\" class=\"gt_row gt_right\">2</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">0.5000000</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">0.1179637</td>\n<td headers=\"p.value.x\" class=\"gt_row gt_right\">0.002178816</td>\n<td headers=\"conf.low\" class=\"gt_row gt_right\">0.2331475</td>\n<td headers=\"conf.high\" class=\"gt_row gt_right\">0.7668525</td>\n<td headers=\"r.squared\" class=\"gt_row gt_right\">0.6662420</td>\n<td headers=\"adj.r.squared\" class=\"gt_row gt_right\">0.6291578</td></tr>\n    <tr><td headers=\"Conjunto\" class=\"gt_row gt_right\">3</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">0.4997273</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">0.1178777</td>\n<td headers=\"p.value.x\" class=\"gt_row gt_right\">0.002176305</td>\n<td headers=\"conf.low\" class=\"gt_row gt_right\">0.2330695</td>\n<td headers=\"conf.high\" class=\"gt_row gt_right\">0.7663851</td>\n<td headers=\"r.squared\" class=\"gt_row gt_right\">0.6663240</td>\n<td headers=\"adj.r.squared\" class=\"gt_row gt_right\">0.6292489</td></tr>\n    <tr><td headers=\"Conjunto\" class=\"gt_row gt_right\">4</td>\n<td headers=\"estimate\" class=\"gt_row gt_right\">0.4999091</td>\n<td headers=\"std.error\" class=\"gt_row gt_right\">0.1178189</td>\n<td headers=\"p.value.x\" class=\"gt_row gt_right\">0.002164602</td>\n<td headers=\"conf.low\" class=\"gt_row gt_right\">0.2333841</td>\n<td headers=\"conf.high\" class=\"gt_row gt_right\">0.7664341</td>\n<td headers=\"r.squared\" class=\"gt_row gt_right\">0.6667073</td>\n<td headers=\"adj.r.squared\" class=\"gt_row gt_right\">0.6296747</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n::: {.fragment}\n\nAplicando uma regressão linear teremos os mesmo $p$-valores, coeficientes, $R^2$ e $R^2$ ajustado para todos os quatro conjuntos.\n\n:::\n:::\n\n::: footer\n\n:::\n\n\n## The Datasaurus Dozen {.smaller}\n\n::: {.pv4 .tc}\n![](../img/DataSaurus Dozen.gif)\n\n::: {.fragment}\n\nO Datasaurus original foi criado por Alberto Cairo. As outras Dúzias é descrito no artigo “Same Stats, Different Graphs: Generating Datasets with VariedAppearance and Identical Statistics through Simulated Recoaling” de Justin Matejka e George Fitzmaurice.\n\n:::\n:::\n\n::: footer\n\n:::\n\n\n\n## The Datasaurus Dozen {.smaller}\n\n::: {.pv4 .tc}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"fqvsknklvw\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#fqvsknklvw table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#fqvsknklvw thead, #fqvsknklvw tbody, #fqvsknklvw tfoot, #fqvsknklvw tr, #fqvsknklvw td, #fqvsknklvw th {\n  border-style: none;\n}\n\n#fqvsknklvw p {\n  margin: 0;\n  padding: 0;\n}\n\n#fqvsknklvw .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#fqvsknklvw .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#fqvsknklvw .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#fqvsknklvw .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#fqvsknklvw .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#fqvsknklvw .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#fqvsknklvw .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#fqvsknklvw .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#fqvsknklvw .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#fqvsknklvw .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#fqvsknklvw .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#fqvsknklvw .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#fqvsknklvw .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#fqvsknklvw .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#fqvsknklvw .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fqvsknklvw .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#fqvsknklvw .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#fqvsknklvw .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#fqvsknklvw .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fqvsknklvw .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#fqvsknklvw .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fqvsknklvw .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#fqvsknklvw .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fqvsknklvw .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fqvsknklvw .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fqvsknklvw .gt_left {\n  text-align: left;\n}\n\n#fqvsknklvw .gt_center {\n  text-align: center;\n}\n\n#fqvsknklvw .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#fqvsknklvw .gt_font_normal {\n  font-weight: normal;\n}\n\n#fqvsknklvw .gt_font_bold {\n  font-weight: bold;\n}\n\n#fqvsknklvw .gt_font_italic {\n  font-style: italic;\n}\n\n#fqvsknklvw .gt_super {\n  font-size: 65%;\n}\n\n#fqvsknklvw .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#fqvsknklvw .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#fqvsknklvw .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#fqvsknklvw .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#fqvsknklvw .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#fqvsknklvw .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#fqvsknklvw .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#fqvsknklvw .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#fqvsknklvw div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"6\" class=\"gt_heading gt_title gt_font_normal\" style>Estatísticas Descritivas do Datasaurus Dozen</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"6\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Agrupadas por Conjunto</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Conjunto\">Conjunto</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Média(X)\">Média(X)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Média(Y)\">Média(Y)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Desv. Pad(X)\">Desv. Pad(X)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Desv. Pad(Y)\">Desv. Pad(Y)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Correlação(X e Y)\">Correlação(X e Y)</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">away</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26610</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83472</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76982</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93974</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06412835</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">bullseye</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26873</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83082</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76924</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93573</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06858639</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">circle</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26732</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83772</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76001</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93004</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06834336</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">dino</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26327</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83225</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76514</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93540</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06447185</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">dots</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26030</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83983</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76774</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93019</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06034144</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">h_lines</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26144</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83025</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76590</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93988</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06171484</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">high_lines</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26881</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83545</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76670</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.94000</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06850422</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">slant_down</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26785</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83590</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76676</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93610</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06897974</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">slant_up</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26588</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83150</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76885</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93861</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06860921</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">star</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26734</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83955</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76896</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93027</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06296110</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">v_lines</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26993</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83699</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76996</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93768</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06944557</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">wide_lines</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26692</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83160</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.77000</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93790</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06657523</td></tr>\n    <tr><td headers=\"dataset\" class=\"gt_row gt_left\">x_shape</td>\n<td headers=\"mean_x\" class=\"gt_row gt_right\">54.26015</td>\n<td headers=\"mean_y\" class=\"gt_row gt_right\">47.83972</td>\n<td headers=\"std_dev_x\" class=\"gt_row gt_right\">16.76996</td>\n<td headers=\"std_dev_y\" class=\"gt_row gt_right\">26.93000</td>\n<td headers=\"corr_x_y\" class=\"gt_row gt_right\">-0.06558334</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\n::: footer\n\n:::\n\n\n\n## The Datasaurus Dozen {.smaller}\n\n::: {.pv4 .tc}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slide_tidyverse_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::: footer\n\n:::\n\n\n\n## Porque usar gráficos  {.smaller}\n\n::: {.pv4 .tc}\n\n::: {.fragment}\n\nO quarteto de [Anscombe]{.b .blue} e o [Datasaurus Dozen]{.b .blue} são maneiras de ilustrar a importância de [visualizações]{.b .green} na análise de dados. Deve-se sempre olhar um conjunto de dados [graficamente]{.b .green} antes de começar qualquer análise, pois estes exemplos, ilustram contextos nos quais as propriedades estatísticas básicas para descrever conjuntos de dados são inadequadas, ou insuficiêntes.\n\n:::\n:::\n\n::: footer\n\n:::\n\n\n\n\n\n## Descrevendo gráficos {.smaller}\n\n::: {.pv4 .tc}\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](slide_tidyverse_files/figure-revealjs/graphics1-1.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](slide_tidyverse_files/figure-revealjs/graphics1-2.png){width=960}\n:::\n:::\n\n\n::: {.fragment}\nAlguns gráficos simples são [fáceis de descrever]{.b .green} e podem até ter [nomes prontos]{.b .blue}.\n:::\n:::\n\n::: footer\n\n:::\n\n## Descrevendo gráficos {.smaller}\n\n::: {.pv4 .tc}\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](slide_tidyverse_files/figure-revealjs/graphics2-1.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](slide_tidyverse_files/figure-revealjs/graphics2-2.png){width=960}\n:::\n:::\n\n\n::: {.fragment}\nUma [gramática de gráficos]{.b .blue} nos ajudará a descrever gráficos mais [complexidade]{.b .green}.\n:::\n:::\n\n::: footer\n\n:::\n\n## The Grammar of Graphics {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   A [gramática dos gráficos]{.b .blue} é um conjunto de regras para [descrever]{.b .green} e [criar]{.b .green} visualizações de dados\n\n::: {.fragment .mt1}\n-   Para tornar nossos dados visuais (e, portanto, colocar nossos lobos occipitais altamente evoluídos para funcionar)...\n    -   Conectamos [variáveis]{.b .blue} a [qualidades visuais]{.b .green}\n    -   Representamos [observações]{.b .blue} como [objetos visuais]{.b .green}\n:::\n\n::: {.fragment .mt1}\n-   Isso requer alguns elementos *fundamentais*\n    -   Primeiro aprenderemos sobre eles na aula\n    -   Em seguida, aplicaremos em R usando \\{ggplot2\\}\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n<!-- {{< li ksoxpinm trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}} -->\n![](../img/gglayers.png)\n:::\n:::\n\n::: footer\n\n:::\n\n\n## Aesthetic Mappings {.smaller}\n\n::: {.pv4 .tc}\n\n![](../img/aes.png)\n\n::: {.fragment}\nOs gráficos exigem [mapeamentos estéticos]{.b .blue}, que conectam [variáveis]{.b .green} a [qualidades visuais]{.b .green}.\n:::\n:::\n\n::: footer\n\n:::\n\n## Scales {.smaller}\n\n::: {.pv4 .tc}\n\n::: {layout-ncol=2}\n![](../img/position.png)\n\n![](../img/otherscale.png)\n:::\n\n::: {.fragment .mt1}\nOs gráficos requerem [escalas]{.b .blue}, que conectam [*valores*]{.b .green} a [*estética*]{.b .green}.\n:::\n:::\n\n::: footer\n\n:::\n\n## Geoms {.smaller}\n\n::: {.pv4 .tc}\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](slide_tidyverse_files/figure-revealjs/geoms-1.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](slide_tidyverse_files/figure-revealjs/geoms-2.png){width=960}\n:::\n:::\n\n\n::: {.fragment .mt1}\nOs gráficos requerem [objetos geométricos]{.b .blue} (geoms), que [representam as observações]{.b .green}.\n:::\n:::\n\n::: footer\n\n:::\n\n## O básico de ggplot2  {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   O pacote [ggplot2]{.b .blue} faz parte do tidyverse\n    -   Não há necessidade de instalar ou carregar separadamente\n    -   Trabalha bem com tibbles & data wrangling\n\n::: {.fragment .mt1}\n-   Ele implementa a [gramática dos gráficos]{.b .green} em R\n    -   O \"gg\" significa \"gramática de gráficos\"\n    -   Assim, precisaremos fornecer os elementos fundamentais\n:::\n\n::: {.fragment .mt1}\n-   Criaremos um [pseudo-pipeline]{.b .green} de comandos\n    -   Entretanto, usaremos `+` em vez de `%>%`\n    -   Isso é porque o \\{ggplot2\\} é anterior ao pipe do R\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li gkeohday trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## ggplot2 - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Precisaremos do tidyverse e de um conjunto de dados de exemplo\n\nlibrary(tidyverse)\n\nmpg\n\n# ==============================================================================\n\n# LIÇÃO: Primeiro, defina os dados para um tibble\np <- ggplot(data = mpg)\np\n\n# ==============================================================================\n\n# LIÇÃO: Em seguida, defina os mapeamentos estéticos com a função aes()\n\np <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy))\np\n\n# ==============================================================================\n\n# DICA: Você pode usar aes() diretamente sem o argumento mapping\n\np <- ggplot(mpg, aes(x = displ, y = hwy))\np\n\n# ==============================================================================\n\n# LIÇÃO: Em seguida, defina as escalas posicionais\n\np <- ggplot(mpg, aes(x = displ, y = hwy)) +\n  scale_x_continuous(\n    name = \"Engine Size (in liters)\", \n    limits = c(1, 7), \n    breaks = 1:7\n  ) +\n  scale_y_continuous(\n    name = \"Highway Fuel Efficiency (in miles/gallon)\",\n    limits = c(10, 50),\n    breaks = c(10, 20, 30, 40, 50)\n  )\np\n\n# ==============================================================================\n\n# LIÇÃO: Por fim, adicione um ponto geométrico (geom)\n\np <- \n  ggplot(mpg, aes(x = displ, y = hwy)) + \n  scale_x_continuous(\n    name = \"Engine Size (in liters)\", \n    limits = c(1, 7), \n    breaks = 1:7\n  ) +\n  scale_y_continuous(\n    name = \"Highway Fuel Efficiency (in miles/gallon)\",\n    limits = c(10, 50),\n    breaks = c(10, 20, 30, 40, 50)\n  ) +\n  geom_point()\n\n# ==============================================================================\n\n# DICA: Se você deixar de fora as escalas, o R tentará adivinhar\n\np <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()\np\n\n# ==============================================================================\n\n# LIÇÃO: Também podemos personalizar o geom com argumentos\n\np <- ggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point(color = \"red\", shape = \"square\", size = 2)\np\n```\n:::\n\n\n::: footer\n\n:::\n\n## O básico sobre Camadas {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   ggplot2 usa uma gramática [em camadas]{.b .blue} de gráficos\n    -   Permite [empilhar geoms]{.b .green} (formas geométricas)\n\n::: {.fragment .mt1}\n-   Camadas adiciona muitas possibilidades\n    -   Podemos transmitir ideias [mais complexas]{.b .green}\n    -   Podemos aprender mais sobre nossos dados\n:::\n\n::: {.fragment .mt1}\n-   Mas ainda podemos descrever esses gráficos\n    -   Apenas [descreva cada camada]{.b .green} por vez\n    -   E descreva a ordenação das camadas\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li ikwcijxm trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Camadas ggplot2 - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Precisaremos do tidyverse e de um conjunto de dados de exemplo\n\nlibrary(tidyverse)\n\nmpg\n\n# ==============================================================================\n\n# CASO DE USO: Adicionar uma geometria suave (geom_smooth), ou seja, linha de melhor ajuste. \n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point() +\n  geom_smooth()\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n# ==============================================================================\n\n# CASO DE USO: Adicionar uma linha geom (ou seja, pontos de conexão)\n\neconomics\n\nggplot(economics, aes(x = date, y = unemploy)) + \n  geom_point()\n\nggplot(economics, aes(x = date, y = unemploy)) + \n  geom_point() +\n  geom_line(color = \"orange\", size = 1)\n\nggplot(economics, aes(x = date, y = unemploy)) + \n  geom_line(color = \"orange\", size = 1) +\n  geom_point()\n\n# ==============================================================================\n\n# CASO DE USO: Adicionar linhas de referência geométricas\n\nggplot(economics, aes(x = date, y = unemploy)) + \n  geom_hline(yintercept = 0, color = \"orange\", size = 1) +\n  geom_line(color = \"blue\", size = 1) +\n  geom_point()\n\nggplot(economics, aes(x = date, y = unemploy)) + \n  geom_vline(xintercept = 7.5, color = \"orange\", size = 1) +\n  geom_line(color = \"blue\", size = 1) +\n  geom_point() \n\nggplot(economics, aes(x = date, y = unemploy)) + \n  geom_abline(intercept = 4000, slope = 0.5, color = \"orange\", size = 1) +\n  geom_line(color = \"blue\", size = 1) +\n  geom_point() \n```\n:::\n\n\n::: footer\n\n:::\n\n## Trabalhando com cores {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   As escalas de cores são de dois tipos principais:\n    -   As escalas [discretas]{.b .blue} têm [cores separadas]{.b .green}\n        -   Melhor com variáveis do tipo [fator]{.b .blue}\n    -   As escalas [Contínuas]{.b .blue} formam um [gradiente]{.b .verde}\n        -   Melhor com variáveis numéricas\n\n::: {.fragment .mt1}\n-   Existem duas maneiras de controlar a cor:\n    -   Você pode [mapear a cor]{.b .blue} para uma [variável]{.b .green}\n        -   Assumirá valores *diferentes*\n    -   Você pode [definir a cor]{.b .blue} para um [valor]{.b .green}\n        -   Ele assumirá *um* valor apenas\n:::\n\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li fiivuxdi trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Cores - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Precisaremos do tidyverse e de um conjunto de dados de exemplo\n\nlibrary(tidyverse)\n\nmpg\n\n# ==============================================================================\n\n# CASO DE USO: Escalas de cores contínuas funcionam bem com variáveis numéricas\n\nggplot(mpg, aes(x = hwy, y = cty, color = displ)) +\n  geom_point(size = 4)\n\nggplot(mpg, aes(x = hwy, y = cty, color = displ)) +\n  geom_point(size = 4) +\n  scale_color_continuous(type = \"viridis\")\n\n# ==============================================================================\n\n# CASO DE USO: Use uma escala de cores discreta com variáveis categóricas\n\nggplot(mpg, aes(x = displ, y = hwy, color = drv)) +\n  geom_point()\n\nggplot(mpg, aes(x = displ, y = hwy, color = drv)) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Drivetrain\", \n    breaks = c(\"4\", \"f\", \"r\"), \n    labels = c(\"Four Wheel\", \"Front Wheel\", \"Rear Wheel\")\n  )\n\n# ==============================================================================\n\n# ARMADILHA: Não se esqueça de definir variáveis categóricas como fatores\n\nggplot(mpg, aes(x = displ, y = hwy, color = cyl)) + \n  geom_point() # o R supõe que você quer uma escala contínua\n\nggplot(mpg, aes(x = displ, y = hwy, color = factor(cyl))) + \n  geom_point() + \n  scale_color_discrete(name = \"Cylinders\")\n\n# ==============================================================================\n\n# LIÇÃO: Defina a estética de cor de um geom para que ele sempre tenha essa cor\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point(color = \"red\")\n\n# ==============================================================================\n\n# ARMADILHA: No entanto, faça isso dentro de geom() e não de aes()\n\nggplot(mpg, aes(x = displ, y = hwy, color = \"blue\")) + \n  geom_point()  # não intencional\n\n# ==============================================================================\n\n# LIÇÃO: Se você definir e mapear a cor, vai dar bom.\n\nggplot(mpg, aes(x = displ, y = hwy, color = drv)) + \n  geom_point(color = \"blue\") \n```\n:::\n\n\n::: footer\n\n:::\n\n## Temas {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   [Temas]{.b .blue} controlam a aparência dos elementos não-dados\n    -   por exemplo, qual a espessura para desenhar as linhas de grade\n    -   por exemplo, onde posicionar a legenda\n\n::: {.fragment .mt1}\n-   [Temas completos]{.b .green} alteram muitos elementos de uma só vez\n    -   Alguns estão incorporados ao ggplot2\n    -   Outros vêm em pacotes R\n    \n:::\n\n::: {.fragment .mt1}\n-   [Elementos individuais]{.b .green} também podem ser personalizados\n    -   Para fazer isso, use `theme()` e [esta referência](https://ggplot2.tidyverse.org/reference/element.html)\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li hbkyydsg trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Temas - Prática\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Precisaremos do tidyverse e de um gráfico de exemplo\n\nlibrary(tidyverse)\n\np <- \n  ggplot(mpg, aes(x = displ, y = hwy, color = drv)) + \n  geom_point() +\n  labs(title = \"Fuel Efficiency\")\np\n\n# ==============================================================================\n\n# CASO DE USO: Aplicar um tema \"completo\"\n\np + theme_bw()\n\np + theme_classic()\n\np + theme_dark()\n\n# ==============================================================================\n\n# LIÇÃO: Controle mais preciso, podemos usar theme()\n\np + theme(legend.position = \"top\")\n\np + theme(plot.title = element_text(color = \"purple\", face = \"bold\"))\n\np + theme(panel.grid = element_blank())\n\n# OBSERVAÇÃO: Há muitos elementos para aprender, então leia a documentação!\n```\n:::\n\n\n::: footer\n\n:::\n\n## Exportando gráficos {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   Podemos precisar [exportar gráficos]{.b .blue} do R\n    -   por exemplo, para um artigo, pôster ou apresentação\n\n::: {.fragment .mt1}\n-   Este trabalho está sendo executado fantasticamente pela função `ggsave()`\n    -   Podemos criar muitos tipos de arquivos\n    -   Podemos personalizar o tamanho exato\n:::\n\n::: {.fragment .mt1}\n-   Eu recomendo `.png` para a maioria dos propósitos diários\n    -   Para publicação, prefiro `.pdf` ou `.svg`\n    -   Eles mantêm a qualidade perfeita em qualquer zoom\n    \n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li amfaktum trigger=loop delay=3000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n::: footer\n\n:::\n\n## Exportando gráficos - Prática \n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# CONFIGURAÇÃO: Precisaremos do tidyverse e de um gráfico de exemplo\n\nlibrary(tidyverse)\n\np <- ggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point() + geom_smooth() +\n  labs(x = \"Engine Displacement\", y = \"Highway MPG\")\np\n\n# ==============================================================================\n\n# CASO DE USO: Salvar um objeto ggplot específico em um arquivo\n\nggsave(filename = \"pfinal.png\", plot = p)\n\n# ==============================================================================\n\n# LIÇÃO: Especifique o tamanho do arquivo a ser criado\n\nggsave(filename = \"pfinal2.png\", plot = p, \n       width = 6, height = 3, units = \"in\")\n\n# ==============================================================================\n\n# LIÇÃO: Basta alterar a extensão para criar um tipo de arquivo diferente\n\nggsave(filename = \"pfinal2.pdf\", plot = p, \n       width = 6, height = 3, units = \"in\")\n\n# ==============================================================================\n\n# ARMADILHA: Criar um arquivo muito grande pode resultar em texto pequeno\n\nggsave(filename = \"p_poster.png\", plot = p, \n       width = 12, height = 8, units = \"in\")\n\n# ==============================================================================\n\n# DICA: Você pode aumentar rapidamente o tamanho do texto usando base_size\n\np2 <- p + theme_grey(base_size = 24)\n\nggsave(filename = \"p_poster2.png\", plot = p2,\n       width = 12, height = 8, units = \"in\")\n```\n:::\n\n\n::: footer\n\n:::\n\n\n# [Até o próximo encontro](https://mefq.netlify.app/){preview-link=\"false\"}\n\n",
    "supporting": [
      "slide_tidyverse_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}