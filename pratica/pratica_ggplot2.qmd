---
title: "Atividade Prática - ggplot2"
format:
  html:
    df-print: paged
---

![](../img/making_art_2780E3.svg){.hero}

```{r}
#| echo: false
#| message: false

library(tidyverse)
```

## Pergunta 1

a) Carregue o tibble `txhousing` (incluído em \{tidyverse\}). Ele contém o número de casas listadas (`listings`) e o preço típico de venda de casas (`median`) em várias cidades e meses do Texas. Crie um tibble de resumo que contenha o número médio de listagens e o preço médio típico de venda de casas em todas as cidades e meses. *Observação:* para esses propósitos descritivos, você pode ignorar os valores ausentes.

b) Modifique sua resposta à Pergunta 1a para gerar as mesmas estatísticas de resumo, mas *por cidade* desta vez (ainda com média em todos os meses).

<p><details>
<summary>Clique aqui para ver a resposta</summary>
<blockquote>

**Resposta (a)**

```{r}
#| comment: "#>"
#| collapse: true

txhousing |> 
  summarize(
    listings = mean(listings, na.rm = TRUE), 
    median = mean(median, na.rm = TRUE)
  )

```

**Resposta (b)**

```{r}
#| comment: "#>"
#| collapse: true
#| warning: false

txhousing |> 
  group_by(city) |> 
  summarize(
    listings = mean(listings, na.rm = TRUE), 
    median = mean(median, na.rm = TRUE)
  )
```

</blockquote></details></p>

## Pergunta 2

Para cada um dos seguintes trechos de código, encontre e corrija o(s) erro(s).

a) "O diagrama de dispersão desmiolado"

```{r}
#| eval: false
#| error: true

ggplot(mpg, x = displ, y = hwy) + 
  geom_point()
```

b) "Suavização não tão suave"

```{r}
#| eval: false
#| error: true

ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point()
  geom_smooth() +
  scale_y_continuous("Highway MPG") +
  scale_x_discrete("Engine Size")
```

c) "Um cano com vazamento"

```{r}
#| eval: false
#| error: true

ggplot(economics, aes(x = date, y = unemploy)) |> 
  geom_line() |> 
  geom_point()
```

<p><details>
<summary>Clique aqui pra ver a resposta</summary>
<blockquote>

**Resposta (a)**

O código esqueceu de colocar os mapeamentos dentro `aes()`.

```{r}
#| comment: "#>"
#| collapse: true

ggplot(mpg, aes(x = displ, y = hwy)) + # fix 1
  geom_point() 
```

**Resposta (b)**

O código esqueceu um `+` e definiu o eixo x como discreto em vez de contínuo.

```{r}
#| comment: "#>"
#| collapse: true

ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point() + # fix 1
  geom_smooth() +
  scale_y_continuous("Highway MPG") +
  scale_x_continuous("Engine Size") # fix 2
```

**Resposta (c)**

O código usava "pipes" (`%>%`) em vez de sinais de mais (`+`) para conectar comandos ggplot2.

```{r}
#| comment: "#>"
#| collapse: true

ggplot(economics, aes(x = date, y = unemploy)) + # fix 1
  geom_line() + # fix 2
  geom_point()
```

</blockquote></details></p>

## Pergunta 3

a) Instale e carregue o pacote \{palmerpenguins\}.

b) Recrie o gráfico a seguir o mais próximo possível do tibble `penguins` naquele pacote (não se preocupe em obter as configurações geom exatamente corretas).

c) Limpe os títulos dos eixos x e y para que sejam mais legíveis (por exemplo, "Flipper length (mm)" em vez de "flipper_length_mm"). *Bônus:* Veja se você consegue descobrir como renomear também o título da legenda.

```{r}
#| echo: false
#| message: false
#| warning: false

ggplot(palmerpenguins::penguins,
       aes(x = flipper_length_mm, y = bill_length_mm,
           color = species, shape = species)) +
  geom_point(size = 3, alpha = 0.75)
```


<p><details>
<summary>Clique aqui para ver a resposta</summary>
<blockquote>

**Resposta (a)**

```{r}
#| comment: "#>"
#| collapse: true

# Extra pane > Packages tab > Install button > palmerpenguins > Install

library(palmerpenguins)
```

**Resposta (b)**

```{r}
#| comment: "#>"
#| collapse: true
#| warning: false

ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm,
                     color = species, shape = species)) +
  geom_point(size = 3, alpha = 0.75)
```

**Resposta (c)**

```{r}
#| comment: "#>"
#| collapse: true
#| warning: false

p <- ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm,
                     color = species, shape = species)) +
  geom_point(size = 3, alpha = 0.75) +
  scale_x_continuous(name = "Flipper length (mm)") +
  scale_y_continuous(name = "Body mass (g)") +
  scale_color_discrete(name = "Penguin species") +
  scale_shape_discrete(name = "Penguin species")
p
```

Ou use este atalho:

```{r}
p <- ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm,
                     color = species, shape = species)) +
  geom_point(size = 3, alpha = 0.75) +
  labs(
    x = "Flipper length (mm)",
    y = "Body mass (g)",
    color = "Penguin species",
    shape_ = "Penguin species"
  )
p
```


</blockquote></details></p>

## Pergunta 4

a) Use seu gráfico da Pergunta 3(c) como um objeto gráfico inicial. Aplique o tema completo "classic" a ele e mova a legenda para o topo. *Bônus:* Também deixe os títulos dos eixos em itálico (pode ser necessário verificar uma folha de dicas [`cheatsheet`] ou fazer alguma pesquisa para encontrar o elemento certo).

b) Exporte este gráfico como um arquivo de imagem para incluir em um artigo. Faça com que tenha 6,5 ​​polegadas de largura e 4 polegadas de altura. *Bônus:* Abra o Microsoft Word ou o Google Docs e insira a imagem.
<p><details>
<summary>Clique aqui para ver a resposta</summary>
<blockquote>

**Resposta (a)**

```{r}
#| comment: "#>"
#| collapse: true
#| warning: false

p2 <- 
  p + 
  theme_classic() + 
  theme(
    legend.position = "top",
    axis.title = element_text(face = "italic") # bonus
  )
p2
```

**Resposta (b)**

```{r}
#| comment: "#>"
#| collapse: true
#| eval: false

ggsave("practice.png", plot = p2, width = 6.5, height = 4, units = "in")
```

</blockquote></details></p>

## Recursos

- [R4DS Capítulo 5](https://r4ds.had.co.nz/transform.html) (§5.6–§5.7): Leia mais sobre resumos, agrupamentos e modificações

- [R4DS Capítulo 12](https://r4ds.had.co.nz/tidy-data.html): Leia mais sobre remodelar e organizar dados em R

- [R4DS Capítulo 3](https://r4ds.had.co.nz/data-visualisation.html): Leia uma introdução à visualização

- [GGP2 Capítulo 11](https://ggplot2-book.org/scale-colour.html): Leia mais sobre cores em ggplot2

- [GGP2 Capítulo 18](https://ggplot2-book.org/polishing.html): Leia mais sobre temas em ggplot2


